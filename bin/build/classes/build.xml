<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." name="templateApp" default="build">

	<!-- Definitions of variables used during the rest of this script -->

	<property file="application.properties"/>
	<property name="build.dir" value="${basedir}/build"/>
	<property name="classes.dir" value="${build.dir}/classes"/>
	<property name="src.dir" value="${basedir}/src"/>
	<property name="jar.dir" value="${build.dir}/jar"/>
	<property name="dist.dir" value="${basedir}/dist"/>
	<property name="conf.dir" value="${basedir}/etc"/>
	<property name="doc.dir" value="${build.dir}/doc"/>
	<property name="test.reports.dir" value="${build.dir}/reports/"/>

	<!-- Definitions of classpath variants used for different tasks -->

	<path id="compile.classpath">
		<fileset dir="lib">
			<include name="*.jar"/>
		</fileset>
	</path>

	<path id="classpath">
		<pathelement location="${classes.dir}"/>
		<!-- configuration -->
		<pathelement location="${conf.dir}"/>
		<fileset dir="lib">
			<include name="*.jar"/>
		</fileset>
	</path>

	<!-- Definitions of runnable ant targets.
         Run them from the command line by executing "ant [targetname]"  -->

	<target name="run" depends="build" description="Run the template application">
		<java
          classname="ee.ut.math.tvt.bartersmart.Intro"
            classpathref="classpath"
            fork="yes">
          <jvmarg value="-Xdebug" />
          <jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=1044" />
        </java>
	</target>

	<target name="build" description="Build the system">
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${classes.dir}"/>
		<javac
            srcdir="${src.dir}"
            destdir="${classes.dir}"
            debug="true"
            debuglevel="lines,vars,source"
            encoding="utf-8"
            compiler="modern"
            target="1.7"
            source="1.7"
			includeantruntime="false">
			<classpath refid="compile.classpath"/>
		</javac>

	</target>

	<!-- Build internal documentation -->
	<target name="javadoc" description="Build internal documentation">
		<mkdir dir="${doc.dir}"/>
		<javadoc destdir="${doc.dir}" classpathref="compile.classpath">
			<fileset dir="${src.dir}" includes="**/*.java"/>
		</javadoc>
	</target>

	<!-- Clean up build system results -->
	<target name="clean" description="Clean up build system results">
		<delete dir="${build.dir}"/>
	</target>

	<!-- creates jar file with all components that are required for running intro window -->
	<target name="dist">	
		<propertyfile
			file="version.properties"
			comment="Version details">
			<entry key="build.revision.number" type="int" operation="+" value="1" pattern="00"/>
		</propertyfile>
		<property file="version.properties"/>
		<propertyfile
			file="version.properties"
			comment="Version details">
			<entry key="build.number" value="${build.major.number}.${build.minor.number}.${build.revision.number}"/>
		</propertyfile>
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}" classpathref="classpath"/>
        <copy todir="${classes.dir}">
			<fileset dir="${basedir}">
				<exclude name="**/src/**"/>
				<exclude name="**/bin/**"/>
				<exclude name="**/build/**"/>
				<exclude name="**/*.java/**"/>
			</fileset>
        </copy>
		<jar basedir="${classes.dir}" destfile="build/jar/${team_name}.jar">
			<manifest>
				<attribute name="Main-Class" value="ee.ut.math.tvt.bartersmart.Intro"/>
			</manifest>
		</jar>
	</target>

	<!-- open intro window using the JAR file created by dist ANT target -->
	<target name="jrun">
        <java fork="true" classname="ee.ut.math.tvt.bartersmart.Intro">
            <classpath>
                <path refid="classpath"/>
                <path location="${jar.dir}/${team_name}.jar"/>
            </classpath>
        </java>
    </target>
	
	<target name="runc" depends="build" description="Run the application (console)">
	<java classname="ee.ut.math.tvt.bartersmart.Intro" classpathref="classpath" fork="yes">
		<arg value="console" />
	</java>
</target>

<target name="git_commit" description="asks for a commit comment, makes a commit to the local repository and pushes changes to the GitHub server">
	<exec executable="git">
        <arg value="add"/>
        <arg value="-A"/>
    </exec>
	<input message="Enter commit message" addproperty="your-message" />
    <exec executable="git">
        <arg value="commit"/>
        <arg value="-m"/>
        <arg value="'${your-message}'"/>
    </exec>
    <exec executable="git">
        <arg value="push"/>
        <arg value="git@github.com:huerequeque/beer-POS-soft.git"/>
    </exec>
</target>

<target name="git_tag" description="asks for a tag name and comment, creates the corresponding tag and synchronizes it with the GitHub.">
	<input message="Enter tag name" addproperty="your-tag-name" />
	<input message="Enter tag comment" addproperty="your-tag-comment" />
    <exec executable="git">
        <arg value="tag"/>
        <arg value="${your-tag-name}"/>
        <arg value="-m"/>
        <arg value="$'{your-tag-comment}'"/>
    </exec>
    <exec executable="git">
        <arg value="push"/>
        <arg value="--tags"/>
        <arg value="git@github.com:huerequeque/beer-POS-soft.git"/>
    </exec>
</target>

</project>

